<div>
    <MudPaper Elevation="3" Class="third-level-paper pa-4 ma-2" Style="background: #f5f3ef;">

        <MudText Typo="Typo.body1" Class="third-level-text mb-3">Local Value: <b>@localValue</b></MudText>

        <MudNumericField @bind-Value="localValue"
                         Label="Local Value"
                         Variant="Variant.Outlined"
                         Class="mb-3"
                         Min="0"
                         Adornment="Adornment.Start"
                         AdornmentIcon="@Icons.Material.Filled.Tag" />

        <MudButton Variant="Variant.Filled"
                   Color="Color.Primary"
                   OnClick="UpdateParentValue"
                   Class="mt-3 mb-1">
            Update Parent
        </MudButton>
    </MudPaper>
</div>

@code {
    [Parameter]
    public int Value { get; set; }

    [Parameter]
    public int Index { get; set; }

    [Parameter]
    public EventCallback<(int, int)> OnLocalValueChanged { get; set; }

    private int localValue { get; set; }

    protected override void OnInitialized()
    {
        localValue = Value;
        base.OnInitialized();
    }

     protected override void OnParametersSet()
    {
        localValue = Value;
        base.OnParametersSet();
    }

    private async Task UpdateParentValue()
    {
        if (OnLocalValueChanged.HasDelegate)
        {
            await OnLocalValueChanged.InvokeAsync((Index, localValue));
        }
    }   
}